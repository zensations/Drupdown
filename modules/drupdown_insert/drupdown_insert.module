<?php
function drupdown_insert_drupdown_url_patterns() {
  $patterns['/^block:\/\/(.*?)\/(.*?)$/'] = array(
    'function' => 'drupdown_insert_block_callback',
    'weight' => 80,
    'classes' => array('drupdown-insert', 'drupdown-block'),
  );
  $patterns['/^views:\/\/(.*?)\/(.*?)(?:\/(.*?))?$/'] = array(
    'function' => 'drupdown_insert_view_callback',
    'weight' => 80,
    'classes' => array('drupdown-insert', 'drupdown-view'),
  );
  $patterns['/^(.*?):\/\/(.*?)\/(.*?)\/(.*?)$/'] = array(
    'function' => 'drupdown_insert_entity_callback',
    'weight' => 85,
    'classes' => array('drupdown-insert', 'drupdown-view'),
  );
  return $patterns;
}

function drupdown_insert_block_callback($text, $url, $settings, $matches) {
  drupal_theme_initialize();
  $block = block_load($matches[1], $matches[2]);
  $renderable = _block_get_renderable_array(_block_render_blocks(array($block)));
  $content = drupal_render($renderable);
  if (empty($content)) {
    $content = '<div class="drupdown-block-empty">' . t('Block is empty.') . '</div>';
  }
  return $content;
}

function drupdown_insert_view_callback($text, $url, $settings, $matches) {
  drupal_set_message('inserting view');
  $view_name = $matches[1];
  $display_id = $matches[2];
  $args = @$matches[3]?$matches[3]:'';
  $view = views_get_view($matches[1]);
  if (empty($view)) {
    return '<div class="drupdown-views-unknown-view">'
      . t('View %name doesn\'t exist.', array(
        '%name' => $matches[1],
      ))
      . '</div>';
  }
  if (!$view->access($matches[2])) {
    return '<div class="drupdown-views-unknown-view-display">'
      . t('Display %display for view %name doesn\'t exist.', array(
        '%name' => $matches[1],
        '%display' => $matches[2],
      ))
      . '</div>';
  }
  $url_args = arg();
  foreach ($url_args as $id => $arg) {
    $args = str_replace("%$id", $arg, $args);
  }
  $args = preg_replace(',/?(%\d),', '', $args);
  $args = $args ? explode('/', $args) : array();

  $view->set_display($display_id);
  $view->set_arguments($args);
  $content = $view->preview($display_id, $args);
  $view->destroy();

  if (empty($content)) {
    $content = '<div class="drupdown-view-empty">' . t('View is empty.') . '</div>';
  }
  return $content;
}

function drupdown_insert_entity_callback($text, $url, $settings, $matches) {
  dpm($matches);
}
