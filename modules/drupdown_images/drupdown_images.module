<?php
function drupdown_images_drupdown_url_patterns() {
  $patterns['/^(.*?)(\:\/\/?).*\.(png|jpg|jpeg|gif)$/i'] = array(
    'function' => 'drupdown_image_callback',
    'weight' => 90,
    'classes' => array('drupdown-image'),
  );
  return $patterns;
}

function drupdown_images_file_element_process($element) {
  if (array_key_exists('#file', $element) && is_object($element['#file'])) {
    if (in_array('image_field_widget_process', $element['#process'])) {
      $styles = array_keys(image_styles());
      $styles[] = 'original';
      foreach ($styles as $style) {
        $element['drupdown_embed_' . $style] = array(
          '#type' => 'hidden',
          '#value' => str_replace('public://', $style.'://', $element['#file']->uri),
          '#attributes' => array('class' => array('drupdown-embed-uri')),
        );
      }
    }
  }
  return $element;
}

function drupdown_images_element_info_alter(&$types) {
  $types['managed_file']['#process'][] = 'drupdown_images_file_element_process';
}

function drupdown_image_callback($text, $url, $settings, $matches) {
  $protocol = $matches[1];
  if ($protocol == 'original') {
    $protocol = 'public';
    $url = str_replace('original://', 'public://', $url);
  }
  $zoom = FALSE;
  if (!in_array($protocol, array('http', 'https', 'public', 'private'))) {
    if (in_array($protocol, array_keys(image_styles()))) {
      $pub = str_replace($protocol . '://', 'public://', $url);
      $style_url = image_style_url($protocol, $pub);
      $style_path = drupal_realpath(image_style_path($protocol, $pub));
      $original_path = drupal_realpath($pub);
      $image_styles = image_styles();
      if (!file_exists($style_path)) {
        image_style_create_derivative($image_styles[$protocol], $original_path, $style_path);
      }
      $style_info = image_get_info($style_path);
      $original_info = image_get_info($original_path);
      $zoom = $style_info['width']*$style_info['height'] < ($original_info['width']*$original_info['height'])/1.3;
      $original_url = file_create_url($pub);
      $url = $style_url;
    }
    else {
      return FALSE;
    }
  }

  $img = theme('image', array(
    'path' => $url,
    'title' => $text,
    'alt' => $text,
  ));

  if ($zoom) {
    $img = l($img, $original_url, array(
      'html' => TRUE,
      'attributes' => array(
        'class' => 'colorbox',
        'title' => $text,
      ),
    ));
  }
  return $img;
}

function drupdown_images_init() {
  global $user;
  $formats = filter_formats($user);
  $style_settings = array();
  foreach (array_keys(filter_formats($user)) as $format_id) {
    $filters = filter_list_format($format_id);
    $style_settings[$format_id] = array();
    foreach ($filters as $filter) {
      if ($filter->name == 'filter_drupdown') {
        foreach ($filter->settings['styles'] as $style) {
          if ($style) {
            $style_settings[$format_id][$style] = $style;
          }
        }
      }
    }
  }
  drupal_add_js(array('drupdown_images' => array('styles' => $style_settings)), 'setting');
}
